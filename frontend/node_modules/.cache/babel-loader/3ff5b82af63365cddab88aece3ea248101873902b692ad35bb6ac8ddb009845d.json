{"ast":null,"code":"var _jsxFileName = \"/Users/vibin/slideshow-master/frontend/src/pages/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport SlideImage from '../components/SlideImage';\nimport SlideText from '../components/SlideText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = () => {\n  _s();\n  const [slideData, setSlideData] = useState({\n    image: '',\n    text: [],\n    'text-color': 'white',\n    'transition-effect': 'fade',\n    'transition-time': 20\n  });\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Create WebSocket connection\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `${protocol}//${window.location.host}/ws`;\n    const ws = new WebSocket(wsUrl);\n\n    // Set up WebSocket event handlers\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('Received slide data:', data);\n        setSlideData(data);\n      } catch (error) {\n        console.error('Error parsing WebSocket data:', error);\n      }\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    // Set WebSocket instance to state\n    setSocket(ws);\n\n    // Clean up WebSocket connection on unmount\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n\n  // Get transition style based on slideshow data\n  const getTransitionStyle = () => {\n    const transitionTime = slideData['transition-time'] || 20;\n    return {\n      transition: `opacity ${transitionTime / 10}s ease-in-out`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide\",\n      style: getTransitionStyle(),\n      children: [/*#__PURE__*/_jsxDEV(SlideImage, {\n        imageData: slideData.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideText, {\n        text: slideData.text,\n        textColor: slideData['text-color']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"Bj9mV9z9MtBIdObbctJppAY0s3M=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useEffect","useState","CSSTransition","TransitionGroup","SlideImage","SlideText","jsxDEV","_jsxDEV","Slideshow","_s","slideData","setSlideData","image","text","socket","setSocket","protocol","window","location","wsUrl","host","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","error","onerror","onclose","close","getTransitionStyle","transitionTime","transition","className","children","style","imageData","fileName","_jsxFileName","lineNumber","columnNumber","textColor","_c","$RefreshReg$"],"sources":["/Users/vibin/slideshow-master/frontend/src/pages/Slideshow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport SlideImage from '../components/SlideImage';\nimport SlideText from '../components/SlideText';\n\nconst Slideshow = () => {\n  const [slideData, setSlideData] = useState({\n    image: '',\n    text: [],\n    'text-color': 'white',\n    'transition-effect': 'fade',\n    'transition-time': 20\n  });\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Create WebSocket connection\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `${protocol}//${window.location.host}/ws`;\n    const ws = new WebSocket(wsUrl);\n\n    // Set up WebSocket event handlers\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('Received slide data:', data);\n        setSlideData(data);\n      } catch (error) {\n        console.error('Error parsing WebSocket data:', error);\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    // Set WebSocket instance to state\n    setSocket(ws);\n\n    // Clean up WebSocket connection on unmount\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n\n  // Get transition style based on slideshow data\n  const getTransitionStyle = () => {\n    const transitionTime = slideData['transition-time'] || 20;\n    return {\n      transition: `opacity ${transitionTime / 10}s ease-in-out`\n    };\n  };\n\n  return (\n    <div className=\"slideshow-container\">\n      <div className=\"slide\" style={getTransitionStyle()}>\n        <SlideImage imageData={slideData.image} />\n        <SlideText text={slideData.text} textColor={slideData['text-color']} />\n      </div>\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}