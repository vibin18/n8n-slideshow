{"ast":null,"code":"import _objectSpread from\"/Users/vibin/slideshow-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useRef}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import SlideImage from'../components/SlideImage';import SlideText from'../components/SlideText';import PixelTransition from'../components/PixelTransition';import{v4 as uuidv4}from'uuid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Slideshow=()=>{const[slideData,setSlideData]=useState({image:'',text:[],'text-color':'white','transition-effect':'fade','transition-time':20});const[socket,setSocket]=useState(null);const[slideKey,setSlideKey]=useState(uuidv4());const[previousImage,setPreviousImage]=useState('');const[currentImage,setCurrentImage]=useState('');const[isTransitioning,setIsTransitioning]=useState(false);const previousSlideDataRef=useRef(null);useEffect(()=>{// Create WebSocket connection - use current hostname for remote access support\nconst protocol=window.location.protocol==='https:'?'wss:':'ws:';const hostname=window.location.hostname;// Use current hostname so it works both locally and on the network\nconst wsUrl=\"\".concat(protocol,\"//\").concat(hostname,\":7070/ws\");const ws=new WebSocket(wsUrl);// Set up WebSocket event handlers\nws.onopen=()=>{console.log('WebSocket connected');};ws.onmessage=event=>{try{const data=JSON.parse(event.data);console.log('Received slide data:',data);// Store previous image for pixel transition if needed\nif(slideData.image&&slideData.image!==data.image){console.log('Image changed, preparing for transition');// Format image URLs properly for the transition\n// Convert to proper data URLs if needed\nconst formatImageUrl=imgData=>{return imgData.startsWith('data:')?imgData:\"data:image/jpeg;base64,\".concat(imgData);};setPreviousImage(formatImageUrl(slideData.image));setCurrentImage(formatImageUrl(data.image));// Always set isTransitioning if the effect is pixel\nif(data['transition-effect']==='pixel'){console.log('Pixel transition detected, activating canvas transition');setIsTransitioning(true);}else{console.log('Using regular CSS transition for effect:',data['transition-effect']);}}else{console.log('No image change detected or no previous image');}// Store the previous slide data\npreviousSlideDataRef.current=_objectSpread({},slideData);// Generate a new key for transition when data changes\nsetSlideKey(uuidv4());setSlideData(data);}catch(error){console.error('Error parsing WebSocket data:',error);}};ws.onerror=error=>{console.error('WebSocket error:',error);};ws.onclose=()=>{console.log('WebSocket disconnected');};// Set WebSocket instance to state\nsetSocket(ws);// Clean up WebSocket connection on unmount\nreturn()=>{if(ws){ws.close();}};},[]);// Get transition class name based on effect\nconst getTransitionClassName=()=>{const effect=slideData['transition-effect']||'fade';if(effect==='slide'){return'slide-effect';}if(effect==='pixel'){// No CSS transition classes for pixel effect\n// We'll use the canvas-based transition instead\nreturn'none';}return'fade';};// Handle the completion of pixel transition\nconst handlePixelTransitionEnd=()=>{setIsTransitioning(false);};// Get transition duration based on slideshow data\nconst getTransitionDuration=()=>{const transitionTime=slideData['transition-time']||20;return transitionTime*100;// Convert to milliseconds\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"slideshow-container\",children:[slideData['transition-effect']!=='pixel'&&/*#__PURE__*/_jsx(TransitionGroup,{children:/*#__PURE__*/_jsx(CSSTransition,{timeout:getTransitionDuration(),classNames:getTransitionClassName(),children:/*#__PURE__*/_jsxs(\"div\",{className:\"slide\",children:[/*#__PURE__*/_jsx(SlideImage,{imageData:slideData.image}),/*#__PURE__*/_jsx(SlideText,{text:slideData.text,textColor:slideData['text-color']})]})},slideKey)}),slideData['transition-effect']==='pixel'&&/*#__PURE__*/_jsxs(\"div\",{className:\"slide\",children:[/*#__PURE__*/_jsx(SlideImage,{imageData:slideData.image}),/*#__PURE__*/_jsx(SlideText,{text:slideData.text,textColor:slideData['text-color']}),isTransitioning&&previousImage&&/*#__PURE__*/_jsx(PixelTransition,{previousImage:previousImage,currentImage:currentImage,isTransitioning:isTransitioning,onTransitionEnd:handlePixelTransitionEnd})]})]});};export default Slideshow;","map":{"version":3,"names":["React","useEffect","useState","useRef","CSSTransition","TransitionGroup","SlideImage","SlideText","PixelTransition","v4","uuidv4","jsx","_jsx","jsxs","_jsxs","Slideshow","slideData","setSlideData","image","text","socket","setSocket","slideKey","setSlideKey","previousImage","setPreviousImage","currentImage","setCurrentImage","isTransitioning","setIsTransitioning","previousSlideDataRef","protocol","window","location","hostname","wsUrl","concat","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","formatImageUrl","imgData","startsWith","current","_objectSpread","error","onerror","onclose","close","getTransitionClassName","effect","handlePixelTransitionEnd","getTransitionDuration","transitionTime","className","children","timeout","classNames","imageData","textColor","onTransitionEnd"],"sources":["/Users/vibin/slideshow-master/frontend/src/pages/Slideshow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport SlideImage from '../components/SlideImage';\nimport SlideText from '../components/SlideText';\nimport PixelTransition from '../components/PixelTransition';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Slideshow = () => {\n  const [slideData, setSlideData] = useState({\n    image: '',\n    text: [],\n    'text-color': 'white',\n    'transition-effect': 'fade',\n    'transition-time': 20\n  });\n  const [socket, setSocket] = useState(null);\n  const [slideKey, setSlideKey] = useState(uuidv4());\n  const [previousImage, setPreviousImage] = useState('');\n  const [currentImage, setCurrentImage] = useState('');\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const previousSlideDataRef = useRef(null);\n\n  useEffect(() => {\n    // Create WebSocket connection - use current hostname for remote access support\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const hostname = window.location.hostname;\n    // Use current hostname so it works both locally and on the network\n    const wsUrl = `${protocol}//${hostname}:7070/ws`;\n    const ws = new WebSocket(wsUrl);\n\n    // Set up WebSocket event handlers\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('Received slide data:', data);\n        \n        // Store previous image for pixel transition if needed\n        if (slideData.image && slideData.image !== data.image) {\n          console.log('Image changed, preparing for transition');\n          \n          // Format image URLs properly for the transition\n          // Convert to proper data URLs if needed\n          const formatImageUrl = (imgData) => {\n            return imgData.startsWith('data:') \n              ? imgData \n              : `data:image/jpeg;base64,${imgData}`;\n          };\n          \n          setPreviousImage(formatImageUrl(slideData.image));\n          setCurrentImage(formatImageUrl(data.image));\n          \n          // Always set isTransitioning if the effect is pixel\n          if (data['transition-effect'] === 'pixel') {\n            console.log('Pixel transition detected, activating canvas transition');\n            setIsTransitioning(true);\n          } else {\n            console.log('Using regular CSS transition for effect:', data['transition-effect']);\n          }\n        } else {\n          console.log('No image change detected or no previous image');\n        }\n        \n        // Store the previous slide data\n        previousSlideDataRef.current = {...slideData};\n        \n        // Generate a new key for transition when data changes\n        setSlideKey(uuidv4());\n        setSlideData(data);\n      } catch (error) {\n        console.error('Error parsing WebSocket data:', error);\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    // Set WebSocket instance to state\n    setSocket(ws);\n\n    // Clean up WebSocket connection on unmount\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n\n  // Get transition class name based on effect\n  const getTransitionClassName = () => {\n    const effect = slideData['transition-effect'] || 'fade';\n    if (effect === 'slide') {\n      return 'slide-effect';\n    }\n    if (effect === 'pixel') {\n      // No CSS transition classes for pixel effect\n      // We'll use the canvas-based transition instead\n      return 'none';\n    }\n    return 'fade';\n  };\n  \n  // Handle the completion of pixel transition\n  const handlePixelTransitionEnd = () => {\n    setIsTransitioning(false);\n  };\n  \n  // Get transition duration based on slideshow data\n  const getTransitionDuration = () => {\n    const transitionTime = slideData['transition-time'] || 20;\n    return transitionTime * 100; // Convert to milliseconds\n  };\n\n  return (\n    <div className=\"slideshow-container\">\n      {/* Only use CSS Transitions for fade and slide effects */}\n      {slideData['transition-effect'] !== 'pixel' && (\n        <TransitionGroup>\n          <CSSTransition\n            key={slideKey}\n            timeout={getTransitionDuration()}\n            classNames={getTransitionClassName()}\n          >\n            <div className=\"slide\">\n              <SlideImage imageData={slideData.image} />\n              <SlideText text={slideData.text} textColor={slideData['text-color']} />\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      )}\n\n      {/* For pixel effect, use static slide with canvas overlay */}\n      {slideData['transition-effect'] === 'pixel' && (\n        <div className=\"slide\">\n          <SlideImage imageData={slideData.image} />\n          <SlideText text={slideData.text} textColor={slideData['text-color']} />\n          {isTransitioning && previousImage && (\n            <PixelTransition\n              previousImage={previousImage}\n              currentImage={currentImage}\n              isTransitioning={isTransitioning}\n              onTransitionEnd={handlePixelTransitionEnd}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}