{"ast":null,"code":"import React,{useEffect}from'react';// List of available Google Fonts to use\nimport{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const googleFonts=['Roboto','Open Sans','Lato','Montserrat','Oswald','Raleway','Playfair Display','Dancing Script','Pacifico'];// Web-safe fonts as fallbacks\nconst webSafeFonts=['Arial','Verdana','Helvetica','Tahoma','Georgia','Times New Roman','Courier New'];const SlideText=_ref=>{let{text,textColor}=_ref;// Load Google Fonts when component mounts\nuseEffect(()=>{// Only load fonts once\nconst linkId='google-fonts-link';if(!document.getElementById(linkId)){const fontsList=googleFonts.join('|').replace(/ /g,'+');const link=document.createElement('link');link.id=linkId;link.rel='stylesheet';link.href=\"https://fonts.googleapis.com/css?family=\".concat(fontsList,\"&display=swap\");document.head.appendChild(link);}},[]);if(!text||text.length===0){return null;}// Generate a font family string with appropriate fallbacks\nconst getFontFamily=font=>{if(!font)return\"'Arial', sans-serif\";// Check if it's a Google font or web-safe font\nconst isGoogleFont=googleFonts.some(gf=>gf.toLowerCase()===font.toLowerCase());const isWebSafeFont=webSafeFonts.some(wf=>wf.toLowerCase()===font.toLowerCase());if(isGoogleFont||isWebSafeFont){return\"'\".concat(font,\"', sans-serif\");}// Default fallback\nreturn\"'\".concat(font,\"', 'Arial', sans-serif\");};return/*#__PURE__*/_jsx(_Fragment,{children:text.map((textItem,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"slide-text\",style:{top:\"\".concat(textItem.y,\"px\"),left:\"\".concat(textItem.x,\"px\"),fontSize:\"\".concat(textItem.fontSize||16,\"px\"),fontFamily:getFontFamily(textItem.font),color:textColor||'white'},children:textItem.content},index))});};// Export the component and the fonts list for reuse\nexport{googleFonts,webSafeFonts};export default SlideText;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","Fragment","_Fragment","googleFonts","webSafeFonts","SlideText","_ref","text","textColor","linkId","document","getElementById","fontsList","join","replace","link","createElement","id","rel","href","concat","head","appendChild","length","getFontFamily","font","isGoogleFont","some","gf","toLowerCase","isWebSafeFont","wf","children","map","textItem","index","className","style","top","y","left","x","fontSize","fontFamily","color","content"],"sources":["/Users/vibin/slideshow-master/frontend/src/components/SlideText.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\n// List of available Google Fonts to use\nconst googleFonts = [\n  'Roboto',\n  'Open Sans',\n  'Lato',\n  'Montserrat',\n  'Oswald',\n  'Raleway',\n  'Playfair Display',\n  'Dancing Script',\n  'Pacifico'\n];\n\n// Web-safe fonts as fallbacks\nconst webSafeFonts = [\n  'Arial',\n  'Verdana',\n  'Helvetica',\n  'Tahoma',\n  'Georgia',\n  'Times New Roman',\n  'Courier New'\n];\n\nconst SlideText = ({ text, textColor }) => {\n  // Load Google Fonts when component mounts\n  useEffect(() => {\n    // Only load fonts once\n    const linkId = 'google-fonts-link';\n    if (!document.getElementById(linkId)) {\n      const fontsList = googleFonts.join('|').replace(/ /g, '+');\n      const link = document.createElement('link');\n      link.id = linkId;\n      link.rel = 'stylesheet';\n      link.href = `https://fonts.googleapis.com/css?family=${fontsList}&display=swap`;\n      document.head.appendChild(link);\n    }\n  }, []);\n  \n  if (!text || text.length === 0) {\n    return null;\n  }\n\n  // Generate a font family string with appropriate fallbacks\n  const getFontFamily = (font) => {\n    if (!font) return \"'Arial', sans-serif\";\n    \n    // Check if it's a Google font or web-safe font\n    const isGoogleFont = googleFonts.some(gf => gf.toLowerCase() === font.toLowerCase());\n    const isWebSafeFont = webSafeFonts.some(wf => wf.toLowerCase() === font.toLowerCase());\n    \n    if (isGoogleFont || isWebSafeFont) {\n      return `'${font}', sans-serif`;\n    }\n    \n    // Default fallback\n    return `'${font}', 'Arial', sans-serif`;\n  };\n\n  return (\n    <>\n      {text.map((textItem, index) => (\n        <div\n          key={index}\n          className=\"slide-text\"\n          style={{\n            top: `${textItem.y}px`,\n            left: `${textItem.x}px`,\n            fontSize: `${textItem.fontSize || 16}px`,\n            fontFamily: getFontFamily(textItem.font),\n            color: textColor || 'white'\n          }}\n        >\n          {textItem.content}\n        </div>\n      ))}\n    </>\n  );\n};\n\n// Export the component and the fonts list for reuse\nexport { googleFonts, webSafeFonts };\nexport default SlideText;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,WAAW,CAAG,CAClB,QAAQ,CACR,WAAW,CACX,MAAM,CACN,YAAY,CACZ,QAAQ,CACR,SAAS,CACT,kBAAkB,CAClB,gBAAgB,CAChB,UAAU,CACX,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,CACnB,OAAO,CACP,SAAS,CACT,WAAW,CACX,QAAQ,CACR,SAAS,CACT,iBAAiB,CACjB,aAAa,CACd,CAED,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,IAAI,CAAEC,SAAU,CAAC,CAAAF,IAAA,CACpC;AACAR,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAW,MAAM,CAAG,mBAAmB,CAClC,GAAI,CAACC,QAAQ,CAACC,cAAc,CAACF,MAAM,CAAC,CAAE,CACpC,KAAM,CAAAG,SAAS,CAAGT,WAAW,CAACU,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAC1D,KAAM,CAAAC,IAAI,CAAGL,QAAQ,CAACM,aAAa,CAAC,MAAM,CAAC,CAC3CD,IAAI,CAACE,EAAE,CAAGR,MAAM,CAChBM,IAAI,CAACG,GAAG,CAAG,YAAY,CACvBH,IAAI,CAACI,IAAI,4CAAAC,MAAA,CAA8CR,SAAS,iBAAe,CAC/EF,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACP,IAAI,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACR,IAAI,EAAIA,IAAI,CAACgB,MAAM,GAAK,CAAC,CAAE,CAC9B,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAAC,aAAa,CAAIC,IAAI,EAAK,CAC9B,GAAI,CAACA,IAAI,CAAE,MAAO,qBAAqB,CAEvC;AACA,KAAM,CAAAC,YAAY,CAAGvB,WAAW,CAACwB,IAAI,CAACC,EAAE,EAAIA,EAAE,CAACC,WAAW,CAAC,CAAC,GAAKJ,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC,CACpF,KAAM,CAAAC,aAAa,CAAG1B,YAAY,CAACuB,IAAI,CAACI,EAAE,EAAIA,EAAE,CAACF,WAAW,CAAC,CAAC,GAAKJ,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC,CAEtF,GAAIH,YAAY,EAAII,aAAa,CAAE,CACjC,UAAAV,MAAA,CAAWK,IAAI,kBACjB,CAEA;AACA,UAAAL,MAAA,CAAWK,IAAI,2BACjB,CAAC,CAED,mBACEzB,IAAA,CAAAE,SAAA,EAAA8B,QAAA,CACGzB,IAAI,CAAC0B,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,gBACxBnC,IAAA,QAEEoC,SAAS,CAAC,YAAY,CACtBC,KAAK,CAAE,CACLC,GAAG,IAAAlB,MAAA,CAAKc,QAAQ,CAACK,CAAC,MAAI,CACtBC,IAAI,IAAApB,MAAA,CAAKc,QAAQ,CAACO,CAAC,MAAI,CACvBC,QAAQ,IAAAtB,MAAA,CAAKc,QAAQ,CAACQ,QAAQ,EAAI,EAAE,MAAI,CACxCC,UAAU,CAAEnB,aAAa,CAACU,QAAQ,CAACT,IAAI,CAAC,CACxCmB,KAAK,CAAEpC,SAAS,EAAI,OACtB,CAAE,CAAAwB,QAAA,CAEDE,QAAQ,CAACW,OAAO,EAVZV,KAWF,CACN,CAAC,CACF,CAAC,CAEP,CAAC,CAED;AACA,OAAShC,WAAW,CAAEC,YAAY,EAClC,cAAe,CAAAC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}